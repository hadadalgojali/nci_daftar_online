<?php

namespace DoctrineProxies\__CG__\Entity\content;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Penyakit extends \Entity\content\Penyakit implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getKodePenyakit()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["kodePenyakit"];
        }
        $this->__load();
        return parent::getKodePenyakit();
    }

    public function setKodePenyakit($kodePenyakit)
    {
        $this->__load();
        return parent::setKodePenyakit($kodePenyakit);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function setParent($parent)
    {
        $this->__load();
        return parent::setParent($parent);
    }

    public function getPenyakit()
    {
        $this->__load();
        return parent::getPenyakit();
    }

    public function setPenyakit($penyakit)
    {
        $this->__load();
        return parent::setPenyakit($penyakit);
    }

    public function getIncludes()
    {
        $this->__load();
        return parent::getIncludes();
    }

    public function setIncludes($includes)
    {
        $this->__load();
        return parent::setIncludes($includes);
    }

    public function getExclude()
    {
        $this->__load();
        return parent::getExclude();
    }

    public function setExclude($exclude)
    {
        $this->__load();
        return parent::setExclude($exclude);
    }

    public function getNote()
    {
        $this->__load();
        return parent::getNote();
    }

    public function setNote($note)
    {
        $this->__load();
        return parent::setNote($note);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getNonRujukanFlag()
    {
        $this->__load();
        return parent::getNonRujukanFlag();
    }

    public function setNonRujukanFlag($nonRujukanFlag)
    {
        $this->__load();
        return parent::setNonRujukanFlag($nonRujukanFlag);
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function save()
    {
        $this->__load();
        return parent::save();
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'kodePenyakit', 'parent', 'penyakit', 'includes', 'exclude', 'note', 'status', 'description', 'nonRujukanFlag');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}