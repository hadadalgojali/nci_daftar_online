<?php

namespace DoctrineProxies\__CG__\Entity\content;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Faskes extends \Entity\content\Faskes implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getFaskesCode()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["faskesCode"];
        }
        $this->__load();
        return parent::getFaskesCode();
    }

    public function setFaskesCode($faskesCode)
    {
        $this->__load();
        return parent::setFaskesCode($faskesCode);
    }

    public function getFaskesName()
    {
        $this->__load();
        return parent::getFaskesName();
    }

    public function setFaskesName($faskesName)
    {
        $this->__load();
        return parent::setFaskesName($faskesName);
    }

    public function getAlamat()
    {
        $this->__load();
        return parent::getAlamat();
    }

    public function setAlamat($alamat)
    {
        $this->__load();
        return parent::setAlamat($alamat);
    }

    public function getTelp()
    {
        $this->__load();
        return parent::getTelp();
    }

    public function setTelp($telp)
    {
        $this->__load();
        return parent::setTelp($telp);
    }

    public function getFax()
    {
        $this->__load();
        return parent::getFax();
    }

    public function setFax($fax)
    {
        $this->__load();
        return parent::setFax($fax);
    }

    public function getKota()
    {
        $this->__load();
        return parent::getKota();
    }

    public function setKota($kota)
    {
        $this->__load();
        return parent::setKota($kota);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getAccept()
    {
        $this->__load();
        return parent::getAccept();
    }

    public function setAccept($accept)
    {
        $this->__load();
        return parent::setAccept($accept);
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function save()
    {
        $this->__load();
        return parent::save();
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'faskesCode', 'faskesName', 'alamat', 'telp', 'kota', 'fax', 'email', 'accept');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}